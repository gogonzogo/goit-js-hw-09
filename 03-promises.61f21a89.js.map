{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAM,CACVC,KAAMC,SAASC,cAAc,QAC7BC,IAAKF,SAASC,cAAc,WAK9B,SAASE,EAAcC,EAAUC,GACb,IAAIC,SAAQ,CAACC,EAASC,KACtCC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,IAEAC,GAAQ,GAETH,EAAM,IAECO,MAAK,KACfhB,EAAAiB,OAAOC,QAAQ,qBAAqBV,QAAeC,MAAU,IAE5DU,OAAM,KACLnB,EAAAiB,OAAOG,QAAQ,oBAAoBZ,QAAeC,MAAU,G,CAjBlEP,EAAIC,KAAKkB,iBAAiB,UA2C1B,SAAsBC,GACpBA,EAAEC,iBARJ,SAAwBC,GACtB,IAAIC,EAAmBC,SAASF,EAAOG,IAAI,UACvCC,EAAuBF,SAASF,EAAOG,IAAI,SAC3CE,EAAoBH,SAASF,EAAOG,IAAI,WAXtBG,EAYPL,EAZkBM,EAYAH,EAZUI,EAYYH,EAXnDC,EAAY,GAAKC,EAAW,GAAKC,EAAa,EAChDhC,EAAAiB,OAAOgB,QAAQ,4CATnB,SAA6BxB,EAAOyB,EAAWC,GAC7C,IAAKC,EAAI,EAAGA,GAAKD,EAAQC,IACvB7B,EAAc6B,EAAG3B,GACjBA,GAASyB,C,CAQTG,CAAoBP,EAAWC,EAAUC,GAJ7C,IAAwBF,EAAWC,EAAUC,C,CAkB3CM,CADe,IAAIC,SAASrC,EAAIC,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst ref = {\n  form: document.querySelector('form'),\n  btn: document.querySelector('button'),\n};\n\nref.form.addEventListener('submit', handleSubmit);\n\nfunction createPromise(position, delay) {\n  let formPromise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve();\n      } else {\n        reject();\n      };\n    }, delay);\n  })\n  formPromise.then(() => {\n    Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n  })\n    .catch(() => {\n      Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n    });\n};\n\nfunction promiseCreationLoop(delay, delayStep, amount) {\n  for (i = 1; i <= amount; i++) {\n    createPromise(i, delay);\n    delay += delayStep;\n  };\n};\n\nfunction formValidation(formDelay, formStep, formAmount) {\n  if (formDelay < 1 || formStep < 1 || formAmount < 1) {\n    Notify.warning(\"REQUIRED: Inputs must be greater than 0!\");\n  } else {\n    promiseCreationLoop(formDelay, formStep, formAmount);\n  };\n};\n\nfunction formDataParser(object) {\n  let promiseFormDelay = parseInt(object.get('delay'));\n  let promiseFormDelayStep = parseInt(object.get('step'));\n  let promiseFormAmount = parseInt(object.get('amount'));\n  formValidation(promiseFormDelay, promiseFormDelayStep, promiseFormAmount);\n};\n\nfunction handleSubmit(e) {\n  e.preventDefault();\n  let formData = new FormData(ref.form);\n  formDataParser(formData);\n};"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$ref","form","document","querySelector","btn","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","then","Notify","success","catch","failure","addEventListener","e","preventDefault","object","promiseFormDelay","parseInt","get","promiseFormDelayStep","promiseFormAmount","formDelay","formStep","formAmount","warning","delayStep","amount","i","$47d4ff9957288465$var$promiseCreationLoop","$47d4ff9957288465$var$formDataParser","FormData"],"version":3,"file":"03-promises.61f21a89.js.map"}